#!/usr/bin/env bash

# Color definitions for status messages
blueDark="\e[1;38;5;33m"     # Bold dark blue
mediumBlue="\e[1;38;5;32m"   # Bold medium blue
lightBlue="\e[1;38;5;39m"    # Bold light blue
cyan="\e[1;38;5;45m"         # Bold cyan
white="\e[1;97m"             # Bold white
reset="\e[0m"                # Reset text formatting

# Additional colors for warnings/errors
red="\e[1;31m"               # Bold red for errors
yellow="\e[1;33m"            # Bold yellow for warnings
green="\e[1;32m"             # Bold green for success

# Print status messages
printMsg() {
    local message="$1"
    echo -e "${blueDark}[${lightBlue}community-livecd-key${blueDark}]${reset} ${cyan}→${reset} ${white}${message}${reset}"
}

# Print success messages
printOk() {
    local message="$1"
    echo -e "${blueDark}[${green}SUCCESS${blueDark}]${reset} ${cyan}→${reset} ${white}${message}${reset}"
}

# Print warning messages
printWarn() {
    local message="$1"
    echo -e "${blueDark}[${yellow}WARNING${blueDark}]${reset} ${cyan}→${reset} ${white}${message}${reset}"
}

# Print error messages
printErr() {
    local message="$1"
    echo -e "${blueDark}[${red}ERROR${blueDark}]${reset} ${cyan}→${reset} ${white}${message}${reset}"
}

post_install() {
    # List of files to copy
    files=('pubring.gpg' 'trustdb.gpg')

    # Source and destination paths
    srcpath='/usr/share/pacman/keyrings'
    destpath='/etc/pacman.d/gnupg'

    # Ensure the destination directory exists
    if [[ ! -d "$destpath" ]]; then
        printMsg "Creating destination directory: $destpath"
        mkdir -p "$destpath"
    fi

    # Make sure destination directory exists (redundant safe check)
    mkdir -p /etc/pacman.d/gnupg

    # Copy each file
    for file in "${files[@]}"; do
        srcfile="$srcpath/$file"
        destfile="$destpath/$file"

        # Check if the source file exists
        if [[ -e "$srcfile" ]]; then
            printMsg "Copying ${file} to ${destpath}..."
            cp -af "$srcfile" "$destfile" >/dev/null 2>&1
        else
            printWarn "Source file not found: $srcfile"
        fi
    done

    # Initialize the pacman keyring
    printMsg "Initializing pacman keyring..."
    pacman-key --init >/dev/null 2>&1
    printOk "Pacman keyring initialized successfully."
}

post_upgrade() {
    printMsg "Running post-upgrade tasks..."
    post_install
}